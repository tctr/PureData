#N canvas 477 140 818 502 12;
#X msg 167 192 new message;
#X msg 183 157 set new message;
#X msg 167 125 set;
#X text 201 125 <= empty message;
#X text 34 33 You can set Messages \, GUIs and arrays in Pd with special
messages \, let's start with message boxes. A "set" message will generate
a new message \, which is not sent out the outlet., f 50;
#X msg 99 150 set \$1;
#X floatatom 99 122 5 0 0 0 - - -;
#X msg 77 445 \; x set \$1;
#X floatatom 105 402 5 0 0 0 - - -;
#X obj 585 150 receive x;
#X obj 585 222 print;
#X text 149 403 <= click and drag;
#X text 33 260 You can also change messages in different ways \, for
a full description check the help file of a message box. Below we have
a message that was generated by incoming messages., f 51;
#X obj 589 358 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 5100 1;
#X msg 586 396 set \$1;
#X obj 561 437 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 51 256;
#X obj 585 190 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 48 256;
#X text 437 40 Atom boxes (both float and symbol) and iemguis like
'number2' and sliders also understand a set message. Below we receive
a "set" message into a number box. Note that the value doesn't get
out to the [print] object., f 48;
#X text 452 273 The set message in GUIs and atom boxes are useful to
pair different graphical elements without generating an infinite loop.
See below:, f 47;
#X obj 167 223 print;
#X msg 88 366 addsemi \, add2 x set \, adddollar 1;
#X msg 76 333 set;
#X text 108 332 <= reset to an empty message;
#X text 323 366 <= recreate the message;
#X connect 0 0 19 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 5 0;
#X connect 8 0 7 0;
#X connect 9 0 16 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X connect 16 0 10 0;
#X connect 20 0 7 0;
#X connect 21 0 7 0;
