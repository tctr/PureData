#N canvas 195 86 1088 536 12;
#X declare -path else;
#X obj 338 205 nbx 5 14 -1e+37 1e+37 0 0 empty \$0-hz Hz 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X obj 93 177 nbx 5 14 -1e+37 1e+37 0 0 empty \$0-hz Hz 0 -8 0 10 #dcdcdc
#000000 #000000 0 256;
#N canvas 706 23 495 341 FFT 0;
#X obj 102 33 inlet~;
#X obj 102 88 rfft~;
#X obj 191 185 metro 100;
#X obj 191 162 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 308 145 block~ 4096;
#X obj 191 134 loadbang;
#X obj 102 187 /~ 1024;
#X obj 102 214 rmstodb~;
#X obj 112 251 clip~ 40 100;
#X obj 138 280 tabwrite~ \$0-fft-band-limited;
#X obj 102 157 car2pol~;
#X msg 298 179 const 40;
#X obj 298 233 s \$0-fft-non-limited;
#X obj 307 208 s \$0-fft-band-limited;
#X connect 0 0 1 0;
#X connect 1 0 10 0;
#X connect 1 1 10 1;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 5 0 3 0;
#X connect 5 0 11 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 10 0 6 0;
#X connect 11 0 12 0;
#X connect 11 0 13 0;
#X restore 353 273 pd FFT;
#N canvas 247 94 495 341 FFT 0;
#X obj 102 33 inlet~;
#X obj 102 88 rfft~;
#X obj 191 185 metro 100;
#X obj 191 162 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 308 145 block~ 4096;
#X obj 191 134 loadbang;
#X obj 102 187 /~ 1024;
#X obj 102 214 rmstodb~;
#X obj 102 241 clip~ 40 100;
#X obj 133 268 tabwrite~ \$0-fft-non-limited;
#X obj 400 202 s \$0-hz;
#X msg 400 175 2000;
#X obj 400 151 loadbang;
#X obj 103 157 mag~;
#X connect 0 0 1 0;
#X connect 1 0 13 0;
#X connect 1 1 13 1;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 11 0 10 0;
#X connect 12 0 11 0;
#X connect 13 0 6 0;
#X restore 113 279 pd FFT;
#X obj 93 308 out~;
#X obj 338 302 out~;
#X obj 93 234 function~ 0 0.165 1 0.12 1 0 -1 0.22 1 0 -1 0.225 1 0.27
0, f 29;
#X text 978 187 Nyquist;
#X text 504 189 0 Hz;
#X text 978 346 Nyquist;
#X text 504 348 0 Hz;
#X obj 507 65 cnv 15 510 118 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#X obj 507 224 cnv 15 510 118 empty empty empty 20 12 0 14 #dcdcdc
#404040 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-fft-non-limited 2048 float 0;
#X coords 0 100 2047 40 512 120 1 0 0;
#X restore 506 64 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-fft-band-limited 2048 float 0;
#X coords 0 100 2047 40 512 120 1 0 0;
#X restore 506 223 graph;
#X obj 855 24 declare -path else;
#N canvas 68 23 460 269 Band-Limited 0;
#X obj 82 209 outlet~;
#X obj 82 38 inlet;
#X obj 82 70 phasor~;
#X obj 310 169 block~ 64 1 16;
#X obj 82 168 brickwall~;
#X obj 82 103 function~ 0 0.165 1 0.12 1 0 -1 0.22 1 0 -1 0.225 1 0.27
0, f 19;
#X text 164 168 <= Anti-Aliasing =>;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 4 0 0 0;
#X connect 5 0 4 0;
#X restore 338 238 pd Band-Limited;
#X text 27 23 The Oversampling + filtering technique for Anti-Aliasing
can be applied in any kind of waveform or also any kind of audio processing
that potentially generates aliasing. In this example we apply an anti-aliasing
filter in a waveform generated by [function~]. This is an arbitrary
waveform with many discontinuities \, which is the thing that mostly
contributes to aliasing. Compare the sound result and check the spectrographs.
, f 61;
#X obj 93 201 phasor~;
#X obj 685 444 bl.wavetable~;
#X text 141 398 Hard sync generates aliasing because it also generates
discontinuities and any significant discontinuity in the signal can
generate artifacts and components over the Nyquist. Phase and Frequency
modulation \, which we'll study later \, also generate aliased components.
Check now the help file of the [bl.wavetable~] object from the ELSE
library \, which is an abstraction that uses the oversampling + filtering
technique and also minimizes aliasing caused by hard sync and phase
modulation., f 70;
#X connect 0 0 16 0;
#X connect 1 0 18 0;
#X connect 6 0 3 0;
#X connect 6 0 4 0;
#X connect 16 0 2 0;
#X connect 16 0 5 0;
#X connect 18 0 6 0;
